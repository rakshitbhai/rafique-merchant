{"version":3,"file":"static/js/properties-chunk.5954af47.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/motion-dom/dist/es/utils/transform.mjs","components/SimpleSwipeProperties.jsx","components/ElegantFeaturedProperties.jsx","components/Properties.jsx"],"sourcesContent":["import { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, options);\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { motion, AnimatePresence, useMotionValue, useTransform } from 'motion/react';\nimport { selectFilteredProperties } from '../store/slices/propertiesSlice';\n\n// Memoized property card component for better performance\nconst PropertyCard = React.memo(({\n    property,\n    isActive = false,\n    scale = 1,\n    opacity = 1,\n    zIndex = 0,\n    x,\n    rotate,\n    onDragEnd,\n    onPropertyClick,\n    yOffset = 0\n}) => {\n    const cardStyle = useMemo(() => ({\n        backgroundImage: `url(${property.image})`,\n        scale: isActive ? 1 : scale,\n        opacity: opacity,\n        zIndex: zIndex,\n        y: yOffset,\n        // Hardware acceleration\n        willChange: isActive ? 'transform' : 'auto',\n        ...(isActive && x && rotate ? { x, rotate } : {})\n    }), [property.image, isActive, scale, opacity, zIndex, yOffset, x, rotate]);\n\n    const cardProps = useMemo(() => {\n        const base = {\n            className: `swipe-card ${isActive ? 'top' : ''}`,\n            style: cardStyle,\n            initial: { scale: 0.85, opacity: 0 },\n            animate: {\n                scale: isActive ? 1 : scale,\n                opacity: opacity\n            },\n            transition: {\n                duration: 0.3,\n                ease: [0.25, 0.46, 0.45, 0.94], // Custom easing for smoothness\n                type: \"tween\"\n            }\n        };\n\n        if (isActive && onDragEnd) {\n            return {\n                ...base,\n                drag: \"x\",\n                dragConstraints: { left: 0, right: 0 },\n                dragElastic: 0.05, // Reduced for snappier feel\n                dragTransition: { bounceStiffness: 300, bounceDamping: 20 },\n                onDragEnd,\n                whileDrag: {\n                    scale: 1.015,\n                    cursor: 'grabbing',\n                    transition: { duration: 0.1 }\n                }\n            };\n        }\n\n        return base;\n    }, [isActive, cardStyle, scale, opacity, onDragEnd]);\n\n    return (\n        <motion.div {...cardProps}>\n            {/* Enhanced dark overlay for better text visibility */}\n            <div style={{\n                position: 'absolute',\n                inset: 0,\n                background: 'linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.3) 40%, rgba(0, 0, 0, 0.8) 100%)',\n                pointerEvents: 'none',\n                zIndex: 1\n            }} />\n\n            {/* VIEW Button */}\n            {onPropertyClick && (\n                <button\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        onPropertyClick(property);\n                    }}\n                    style={{\n                        position: 'absolute',\n                        top: '1.5rem',\n                        left: '1.5rem',\n                        background: 'rgba(255, 255, 255, 0.9)',\n                        backdropFilter: 'blur(8px)',\n                        border: 'none',\n                        borderRadius: '20px',\n                        padding: '0.5rem 1rem',\n                        color: 'black',\n                        fontSize: '0.75rem',\n                        fontWeight: '600',\n                        letterSpacing: '0.1em',\n                        cursor: 'pointer',\n                        zIndex: 10,\n                        transition: 'all 0.2s ease',\n                        textTransform: 'uppercase'\n                    }}\n                    onMouseEnter={(e) => {\n                        e.target.style.background = 'rgba(255, 255, 255, 1)';\n                        e.target.style.transform = 'scale(1.05)';\n                    }}\n                    onMouseLeave={(e) => {\n                        e.target.style.background = 'rgba(255, 255, 255, 0.9)';\n                        e.target.style.transform = 'scale(1)';\n                    }}\n                >\n                    View\n                </button>\n            )}\n\n            <div className=\"swipe-card-overlay swipe-card-overlay-enhanced\" style={{\n                position: 'relative',\n                zIndex: 2,\n                padding: 0, // Override default padding\n                background: 'none', // Override default background\n                display: 'block' // Override default flex\n            }}>\n                {/* Property type badge with better contrast */}\n                <div className=\"badge\" style={{\n                    position: 'absolute',\n                    top: '1.5rem',\n                    right: '1.5rem',\n                    fontSize: '0.7rem',\n                    padding: '0.4rem 0.8rem',\n                    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                    backdropFilter: 'blur(12px)',\n                    border: '1px solid rgba(255, 255, 255, 0.2)',\n                    color: 'white',\n                    fontWeight: '600',\n                    textShadow: '0 1px 2px rgba(0, 0, 0, 0.5)'\n                }}>\n                    {property.type}\n                </div>\n\n                {/* Content container with enhanced background */}\n                <div style={{\n                    background: 'linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.4) 20%, rgba(0, 0, 0, 0.85) 100%)',\n                    padding: '2rem 1.5rem 1.5rem',\n                    borderRadius: '0 0 34px 34px',\n                    backdropFilter: 'blur(8px)',\n                    position: 'relative'\n                }}>\n                    <h3 style={{\n                        margin: '0 0 0.5rem',\n                        color: 'white',\n                        fontSize: '1.4rem',\n                        fontWeight: '600',\n                        textShadow: '0 2px 4px rgba(0, 0, 0, 0.7)',\n                        lineHeight: '1.3'\n                    }}>{property.title}</h3>\n\n                    <p className=\"loc\" style={{\n                        margin: '0 0 0.8rem',\n                        color: 'rgba(255, 255, 255, 0.9)',\n                        fontSize: '0.8rem',\n                        letterSpacing: '0.1em',\n                        textTransform: 'uppercase',\n                        textShadow: '0 1px 2px rgba(0, 0, 0, 0.7)'\n                    }}>{property.location}</p>\n\n                    <p className=\"price-line\" style={{\n                        margin: '0 0 0.8rem',\n                        color: 'var(--color-gold)',\n                        fontSize: '1.1rem',\n                        fontWeight: '700',\n                        textShadow: '0 1px 3px rgba(0, 0, 0, 0.8)'\n                    }}>${property.price.toLocaleString()}</p>\n\n                    <p className=\"mini-meta\" style={{\n                        margin: '0 0 0.8rem',\n                        color: 'rgba(255, 255, 255, 0.85)',\n                        fontSize: '0.75rem',\n                        letterSpacing: '0.1em',\n                        textTransform: 'uppercase',\n                        textShadow: '0 1px 2px rgba(0, 0, 0, 0.7)'\n                    }}>\n                        {property.beds} bed • {property.baths} bath • {property.size} sqft\n                    </p>\n\n                    <p style={{\n                        fontSize: '0.8rem',\n                        color: 'rgba(255, 255, 255, 0.8)',\n                        lineHeight: '1.4',\n                        margin: 0,\n                        textShadow: '0 1px 2px rgba(0, 0, 0, 0.7)'\n                    }}>\n                        {property.blurb}\n                    </p>\n                </div>\n            </div>\n        </motion.div>\n    );\n});\n\nPropertyCard.displayName = 'PropertyCard';\n\nconst SimpleSwipeProperties = React.memo(({ onBackToGrid, onFilterChange, onPropertyClick, filters }) => {\n    // Use memoized selector to prevent unnecessary re-renders\n    const filteredProperties = useSelector(selectFilteredProperties);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [isLoading, setIsLoading] = useState(true);\n    const [showFilters, setShowFilters] = useState(false);\n    const [isMobile, setIsMobile] = useState(false);\n\n    // Motion values - must be at top level\n    const x = useMotionValue(0);\n    const rotate = useTransform(x, [-300, 300], [-12, 12]);\n    const cardOpacity = useTransform(x, [-300, -100, 0, 100, 300], [0.85, 1, 1, 1, 0.85]);\n\n    // Check if device is mobile\n    useEffect(() => {\n        const checkMobile = () => setIsMobile(window.innerWidth <= 768);\n        checkMobile();\n        window.addEventListener('resize', checkMobile);\n        return () => window.removeEventListener('resize', checkMobile);\n    }, []);\n\n    // Loading state effect - memoized with image preloading\n    useEffect(() => {\n        if (filteredProperties.length > 0) {\n            // Preload next few images for smoother transitions\n            const imagesToPreload = filteredProperties.slice(0, Math.min(4, filteredProperties.length));\n            imagesToPreload.forEach(property => {\n                const img = new Image();\n                img.src = property.image;\n            });\n\n            const timer = setTimeout(() => setIsLoading(false), 100);\n            return () => clearTimeout(timer);\n        }\n    }, [filteredProperties]);\n\n    // Optimized property getters using useMemo\n    const { currentProperty, nextProperty, thirdProperty } = useMemo(() => {\n        if (!filteredProperties.length) return {};\n\n        return {\n            currentProperty: filteredProperties[currentIndex % filteredProperties.length],\n            nextProperty: filteredProperties[(currentIndex + 1) % filteredProperties.length],\n            thirdProperty: filteredProperties[(currentIndex + 2) % filteredProperties.length]\n        };\n    }, [filteredProperties, currentIndex]);\n\n    // Optimized drag handler with useCallback\n    const handleDragEnd = useCallback((event, info) => {\n        const threshold = 60; // Lower threshold for better responsiveness\n        const velocity = Math.abs(info.velocity.x);\n        const offset = Math.abs(info.offset.x);\n\n        const shouldSwipe = offset > threshold || velocity > 500;\n\n        if (shouldSwipe) {\n            // Immediate index update for snappier feel\n            setCurrentIndex(prev => (prev + 1) % filteredProperties.length);\n\n            // Reset position smoothly\n            setTimeout(() => {\n                x.set(0);\n            }, 40);\n        } else {\n            // Smooth snap back\n            x.set(0);\n        }\n    }, [filteredProperties.length, x]);\n\n    // Loading state\n    if (isLoading) {\n        return (\n            <div className=\"container\" style={{ textAlign: 'center', padding: '4rem 0' }}>\n                <motion.div\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                    style={{\n                        color: 'var(--color-neutral-400)',\n                        fontSize: '1rem',\n                        letterSpacing: '0.1em'\n                    }}\n                >\n                    Loading properties...\n                </motion.div>\n            </div>\n        );\n    }\n\n    // Empty state\n    if (!filteredProperties.length || !currentProperty) {\n        return (\n            <div className=\"container\" style={{ textAlign: 'center', padding: '4rem 0' }}>\n                <h2 className=\"section-heading\">No Properties Available</h2>\n                <p className=\"subheading\">Please adjust filters or check back later</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\" style={{ textAlign: 'center' }}>\n            {/* Navigation Header with Back Button and Filters */}\n            <motion.div\n                initial={{ opacity: 0, y: -20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.4 }}\n                style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: isMobile ? 'center' : 'space-between',\n                    marginBottom: '1.5rem',\n                    padding: '0 1rem',\n                    gap: '1rem'\n                }}\n            >\n                {/* Back to Grid Button - Hidden on Mobile */}\n                {!isMobile && (\n                    <button\n                        onClick={onBackToGrid}\n                        style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            gap: '0.5rem',\n                            background: 'rgba(255,255,255,0.1)',\n                            border: '1px solid rgba(255,255,255,0.2)',\n                            borderRadius: '24px',\n                            padding: '0.6rem 1.2rem',\n                            color: 'white',\n                            fontSize: '0.85rem',\n                            fontWeight: '500',\n                            backdropFilter: 'blur(8px)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease'\n                        }}\n                        onMouseEnter={(e) => {\n                            e.target.style.background = 'rgba(255,255,255,0.15)';\n                            e.target.style.transform = 'translateY(-1px)';\n                        }}\n                        onMouseLeave={(e) => {\n                            e.target.style.background = 'rgba(255,255,255,0.1)';\n                            e.target.style.transform = 'translateY(0)';\n                        }}\n                    >\n                        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M19 12H5M12 19L5 12L12 5\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n                        </svg>\n                        Grid View\n                    </button>\n                )}\n\n                {/* Filter Toggle - Always visible */}\n                <button\n                    onClick={() => setShowFilters(!showFilters)}\n                    style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.5rem',\n                        background: showFilters ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)',\n                        border: '1px solid rgba(255,255,255,0.2)',\n                        borderRadius: '24px',\n                        padding: '0.6rem 1.2rem',\n                        color: 'white',\n                        fontSize: '0.85rem',\n                        fontWeight: '500',\n                        backdropFilter: 'blur(8px)',\n                        cursor: 'pointer',\n                        transition: 'all 0.2s ease'\n                    }}\n                    onMouseEnter={(e) => {\n                        e.target.style.background = 'rgba(255,255,255,0.15)';\n                        e.target.style.transform = 'translateY(-1px)';\n                    }}\n                    onMouseLeave={(e) => {\n                        e.target.style.background = showFilters ? 'rgba(255,255,255,0.2)' : 'rgba(255,255,255,0.1)';\n                        e.target.style.transform = 'translateY(0)';\n                    }}\n                >\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M3 6H21L19 8H5L3 6ZM7 12H17L15 14H9L7 12ZM10 18H14V16H10V18Z\" fill=\"currentColor\" />\n                    </svg>\n                    Filter\n                </button>\n            </motion.div>\n\n            {/* Filter Panel */}\n            <AnimatePresence>\n                {showFilters && (\n                    <motion.div\n                        initial={{ opacity: 0, height: 0 }}\n                        animate={{ opacity: 1, height: 'auto' }}\n                        exit={{ opacity: 0, height: 0 }}\n                        style={{\n                            background: 'rgba(0,0,0,0.8)',\n                            backdropFilter: 'blur(12px)',\n                            borderRadius: '16px',\n                            padding: '1.5rem',\n                            marginBottom: '2rem',\n                            border: '1px solid rgba(255,255,255,0.1)'\n                        }}\n                    >\n                        <div style={{ display: 'flex', gap: '0.8rem', flexWrap: 'wrap', justifyContent: 'center' }}>\n                            <button\n                                onClick={() => onFilterChange('type', '')}\n                                style={{\n                                    background: !filters.type ? 'var(--color-gold)' : 'rgba(255,255,255,0.1)',\n                                    color: !filters.type ? 'black' : 'white',\n                                    border: '1px solid rgba(255,255,255,0.2)',\n                                    borderRadius: '20px',\n                                    padding: '0.5rem 1rem',\n                                    fontSize: '0.8rem',\n                                    fontWeight: '500',\n                                    cursor: 'pointer',\n                                    transition: 'all 0.2s ease'\n                                }}\n                            >\n                                ALL\n                            </button>\n                            {['Penthouse', 'Villa', 'Estate', 'Loft', 'Residence'].map(type => (\n                                <button\n                                    key={type}\n                                    onClick={() => onFilterChange('type', type)}\n                                    style={{\n                                        background: filters.type === type ? 'var(--color-gold)' : 'rgba(255,255,255,0.1)',\n                                        color: filters.type === type ? 'black' : 'white',\n                                        border: '1px solid rgba(255,255,255,0.2)',\n                                        borderRadius: '20px',\n                                        padding: '0.5rem 1rem',\n                                        fontSize: '0.8rem',\n                                        fontWeight: '500',\n                                        cursor: 'pointer',\n                                        transition: 'all 0.2s ease'\n                                    }}\n                                >\n                                    {type.toUpperCase()}\n                                </button>\n                            ))}\n                        </div>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n\n            {/* Header */}\n            <motion.div\n                initial={{ opacity: 0, y: 30 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, ease: \"easeOut\" }}\n                style={{ marginBottom: '2rem' }}\n            >\n                <h2 className=\"section-heading\">Browse Properties</h2>\n                <p className=\"subheading\">Swipe to explore our exclusive listings</p>\n            </motion.div>\n\n            {/* Property counter with elegant styling */}\n            <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.3 }}\n                style={{\n                    color: 'var(--color-gold)',\n                    fontSize: '0.85rem',\n                    fontWeight: '500',\n                    marginBottom: '2rem',\n                    letterSpacing: '0.15em',\n                    textTransform: 'uppercase'\n                }}\n            >\n                {((currentIndex % filteredProperties.length) + 1)} of {filteredProperties.length}\n            </motion.div>\n\n            {/* Swipe deck container with optimized cards */}\n            <div className=\"swipe-deck\" style={{ contain: 'layout' }}>\n                <AnimatePresence mode=\"popLayout\">\n                    {/* Third card (deepest background) */}\n                    {thirdProperty && (\n                        <PropertyCard\n                            key={`third-${currentIndex + 2}`}\n                            property={thirdProperty}\n                            scale={0.88}\n                            opacity={0.4}\n                            zIndex={0}\n                            yOffset={8}\n                            onPropertyClick={onPropertyClick}\n                        />\n                    )}\n\n                    {/* Second card (background) */}\n                    {nextProperty && (\n                        <PropertyCard\n                            key={`next-${currentIndex + 1}`}\n                            property={nextProperty}\n                            scale={0.95}\n                            opacity={0.7}\n                            zIndex={1}\n                            yOffset={4}\n                            onPropertyClick={onPropertyClick}\n                        />\n                    )}\n\n                    {/* Current card (draggable foreground) */}\n                    <PropertyCard\n                        key={`current-${currentIndex}`}\n                        property={currentProperty}\n                        isActive={true}\n                        scale={1}\n                        opacity={cardOpacity}\n                        zIndex={10}\n                        x={x}\n                        rotate={rotate}\n                        onDragEnd={handleDragEnd}\n                        onPropertyClick={onPropertyClick}\n                    />\n                </AnimatePresence>\n            </div>\n\n            {/* Enhanced instructions */}\n            <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.8 }}\n                style={{\n                    marginTop: '2rem',\n                    color: 'var(--color-neutral-500)',\n                    fontSize: '0.8rem',\n                    letterSpacing: '0.1em',\n                    textAlign: 'center'\n                }}\n            >\n                Swipe to browse through properties\n            </motion.div>\n        </div>\n    );\n});\n\nSimpleSwipeProperties.displayName = 'SimpleSwipeProperties';\nexport default SimpleSwipeProperties;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport {\n    setFilter,\n    setSelectedProperty,\n    setViewMode,\n    selectFilters,\n    selectSelectedProperty,\n    selectViewMode,\n    selectFilteredProperties\n} from '../store/slices/propertiesSlice';\nimport SimpleSwipeProperties from './SimpleSwipeProperties';\n\nconst ElegantFeaturedProperties = () => {\n    const dispatch = useDispatch();\n\n    // Redux selectors\n    const filters = useSelector(selectFilters);\n    const selectedProperty = useSelector(selectSelectedProperty);\n    const viewMode = useSelector(selectViewMode);\n    const filteredProperties = useSelector(selectFilteredProperties);\n\n    // Local state\n    const [searchTerm, setSearchTerm] = useState('');\n    const [sortBy, setSortBy] = useState('featured');\n\n    // Check if device is mobile and set initial view mode\n    useEffect(() => {\n        const checkMobile = () => {\n            const mobile = window.innerWidth <= 768;\n\n            // Set swipe mode as default for mobile devices\n            if (mobile && viewMode === 'grid') {\n                dispatch(setViewMode('swipe'));\n            }\n        };\n\n        checkMobile();\n        window.addEventListener('resize', checkMobile);\n        return () => window.removeEventListener('resize', checkMobile);\n    }, [dispatch, viewMode]);    // Event handlers\n    const handleFilterChange = (filterType, value) => {\n        dispatch(setFilter({ filterType, value }));\n    };\n\n    const handlePropertyClick = (property) => {\n        dispatch(setSelectedProperty(property));\n    };\n\n    const handleCloseModal = () => {\n        dispatch(setSelectedProperty(null));\n    };\n\n    const handleViewModeChange = () => {\n        const newMode = viewMode === 'grid' ? 'swipe' : 'grid';\n        dispatch(setViewMode(newMode));\n    };\n\n    // Filter properties based on search term\n    const searchFilteredProperties = filteredProperties.filter(property =>\n        property.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        property.location.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    // Sort properties\n    const sortedProperties = [...searchFilteredProperties].sort((a, b) => {\n        switch (sortBy) {\n            case 'price-low':\n                return a.price - b.price;\n            case 'price-high':\n                return b.price - a.price;\n            case 'location':\n                return a.location.localeCompare(b.location);\n            default:\n                return 0;\n        }\n    });\n\n    return (\n        <>\n            {/* Render swipe or grid mode */}\n            {viewMode === 'swipe' ? (\n                <SimpleSwipeProperties\n                    onBackToGrid={handleViewModeChange}\n                    onFilterChange={handleFilterChange}\n                    onPropertyClick={handlePropertyClick}\n                    filters={filters}\n                    searchTerm={searchTerm}\n                    onSearchChange={setSearchTerm}\n                />\n            ) : (\n                <section className=\"properties-section section-pad\">\n                    <div className=\"section-bg-fade\"></div>\n                    <div className=\"container\">\n                        {/* Header */}\n                        <motion.div\n                            initial={{ opacity: 0, y: 30 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ duration: 0.8 }}\n                            style={{ textAlign: 'center', marginBottom: '3rem' }}\n                        >\n                            <h2 className=\"section-heading\">Featured Portfolio</h2>\n                            <p className=\"subheading\" style={{ margin: '0 auto' }}>\n                                A curated selection of distinguished residences exemplifying\n                                craftsmanship, location advantage and asset resilience.\n                            </p>\n                        </motion.div>\n\n                        {/* Filter Bar */}\n                        <motion.div\n                            initial={{ opacity: 0, y: 20 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ delay: 0.2, duration: 0.8 }}\n                            className=\"portfolio-top-bar\"\n                        >\n                            <div className=\"filters-inline\">\n                                <button\n                                    className={`filter-pill ${!filters.type ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('type', null)}\n                                >\n                                    ALL\n                                </button>\n                                <button\n                                    className={`filter-pill ${filters.type === 'Penthouse' ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('type', 'Penthouse')}\n                                >\n                                    PENTHOUSE\n                                </button>\n                                <button\n                                    className={`filter-pill ${filters.type === 'Villa' ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('type', 'Villa')}\n                                >\n                                    VILLA\n                                </button>\n                                <button\n                                    className={`filter-pill ${filters.type === 'Estate' ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('type', 'Estate')}\n                                >\n                                    ESTATE\n                                </button>\n                                <button\n                                    className={`filter-pill ${filters.type === 'Loft' ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('type', 'Loft')}\n                                >\n                                    LOFT\n                                </button>\n                            </div>\n\n                            <div className=\"filter-bar refined\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Search properties...\"\n                                    value={searchTerm}\n                                    onChange={(e) => setSearchTerm(e.target.value)}\n                                />\n\n                                <select\n                                    value={sortBy}\n                                    onChange={(e) => setSortBy(e.target.value)}\n                                >\n                                    <option value=\"featured\">Featured</option>\n                                    <option value=\"price-low\">Price: Low to High</option>\n                                    <option value=\"price-high\">Price: High to Low</option>\n                                    <option value=\"location\">Location</option>\n                                </select>\n\n                                <button\n                                    onClick={handleViewModeChange}\n                                    className=\"cta\"\n                                    style={{ fontSize: '0.75rem', padding: '0.75rem 1.5rem' }}\n                                >\n                                    {viewMode === 'grid' ? 'SWIPE VIEW' : 'GRID VIEW'}\n                                </button>\n                            </div>\n                        </motion.div>\n\n                        {/* Properties Grid */}\n                        {/*<motion.div\n                            initial={{ opacity: 0, y: 30 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ delay: 0.4, duration: 0.8 }}\n                            className=\"grid properties-grid mosaic responsive\"\n                        >\n                            <AnimatePresence>\n                                {sortedProperties.map((property, index) => (\n                                    <motion.div\n                                        key={property.id}\n                                        layout\n                                        initial={{ opacity: 0, scale: 0.9 }}\n                                        animate={{ opacity: 1, scale: 1 }}\n                                        exit={{ opacity: 0, scale: 0.9 }}\n                                        transition={{\n                                            duration: 0.5,\n                                            delay: index * 0.1\n                                        }}\n                                        className={`card ${property.featured ? 'feature-card' : ''}`}\n                                        onClick={() => handlePropertyClick(property)}\n                                    >\n                                        <div className=\"card-media\" style={{ backgroundImage: `url(${property.image})` }}>\n                                            <div className=\"card-skeleton\">\n                                                <div className=\"skel-shimmer\"></div>\n                                            </div>\n                                        </div>\n\n                                        <button className=\"quick-view-tag\">\n                                            VIEW\n                                        </button>\n\n                                        <div className=\"badge\" style={{ position: 'absolute', top: '1rem', left: '1rem', zIndex: 3 }}>\n                                            {property.type}\n                                        </div>\n\n                                        <div className=\"card-content\">\n                                            <h3>{property.title}</h3>\n                                            <div className=\"price\">\n                                                ${property.price.toLocaleString()}\n                                            </div>\n                                            <div className=\"location\">\n                                                {property.location}\n                                            </div>\n                                            <div className=\"card-meta-row\">\n                                                <span>{property.bedrooms} bed</span>\n                                                <span>{property.bathrooms} bath</span>\n                                                <span>{property.sqft} sqft</span>\n                                            </div>\n                                        </div>\n                                    </motion.div>\n                                ))}\n                            </AnimatePresence>\n                        </motion.div> */}\n                    </div> \n\n                    {/* Property Modal */}\n                    <AnimatePresence>\n                        {selectedProperty && (\n                            <div className=\"modal-portal\">\n                                <motion.div\n                                    initial={{ opacity: 0 }}\n                                    animate={{ opacity: 1 }}\n                                    exit={{ opacity: 0 }}\n                                    className=\"modal-backdrop\"\n                                    onClick={handleCloseModal}\n                                />\n\n                                <motion.div\n                                    initial={{ scale: 0.8, opacity: 0 }}\n                                    animate={{ scale: 1, opacity: 1 }}\n                                    exit={{ scale: 0.8, opacity: 0 }}\n                                    className=\"modal-panel glass-strong\"\n                                    onClick={(e) => e.stopPropagation()}\n                                >\n                                    <div className=\"modal-media\" style={{ backgroundImage: `url(${selectedProperty.image})` }} />\n\n                                    <div className=\"modal-body\">\n                                        <button className=\"modal-close\" onClick={handleCloseModal}>\n                                            ×\n                                        </button>\n\n                                        <h2 className=\"modal-title\">{selectedProperty.title}</h2>\n                                        <div className=\"modal-price\">\n                                            ${selectedProperty.price.toLocaleString()}\n                                        </div>\n                                        <div className=\"modal-meta\">\n                                            {selectedProperty.location}\n                                        </div>\n\n                                        <p style={{ marginTop: '1.5rem', lineHeight: '1.6', color: 'var(--color-neutral-300)' }}>\n                                            {selectedProperty.description}\n                                        </p>\n\n                                        <div style={{\n                                            display: 'grid',\n                                            gridTemplateColumns: 'repeat(3, 1fr)',\n                                            gap: '1rem',\n                                            marginTop: '2rem',\n                                            marginBottom: '1.5rem'\n                                        }}>\n                                            <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                                <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                                    {selectedProperty.bedrooms}\n                                                </div>\n                                                <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                                    Bedrooms\n                                                </div>\n                                            </div>\n                                            <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                                <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                                    {selectedProperty.bathrooms}\n                                                </div>\n                                                <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                                    Bathrooms\n                                                </div>\n                                            </div>\n                                            <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                                <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                                    {selectedProperty.sqft}\n                                                </div>\n                                                <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                                    Square Feet\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"modal-actions\">\n                                            <button className=\"cta\">Contact Agent</button>\n                                            <button className=\"btn-outline cta\">Schedule Tour</button>\n                                        </div>\n                                    </div>\n                                </motion.div>\n                            </div>\n                        )}\n                    </AnimatePresence>\n                </section>\n            )}\n\n            {/* Property Modal - Always available for both grid and swipe modes */}\n            <AnimatePresence>\n                {selectedProperty && (\n                    <div className=\"modal-portal\">\n                        <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            exit={{ opacity: 0 }}\n                            className=\"modal-backdrop\"\n                            onClick={handleCloseModal}\n                        />\n\n                        <motion.div\n                            initial={{ scale: 0.8, opacity: 0 }}\n                            animate={{ scale: 1, opacity: 1 }}\n                            exit={{ scale: 0.8, opacity: 0 }}\n                            className=\"modal-panel glass-strong\"\n                            onClick={(e) => e.stopPropagation()}\n                        >\n                            <div className=\"modal-media\" style={{ backgroundImage: `url(${selectedProperty.image})` }} />\n\n                            <div className=\"modal-body\">\n                                <button className=\"modal-close\" onClick={handleCloseModal}>\n                                    ×\n                                </button>\n\n                                <h2 className=\"modal-title\">{selectedProperty.title}</h2>\n                                <div className=\"modal-price\">\n                                    ${selectedProperty.price.toLocaleString()}\n                                </div>\n                                <div className=\"modal-meta\">\n                                    {selectedProperty.location}\n                                </div>\n\n                                <p style={{ marginTop: '1.5rem', lineHeight: '1.6', color: 'var(--color-neutral-300)' }}>\n                                    {selectedProperty.blurb}\n                                </p>\n\n                                <div style={{\n                                    display: 'grid',\n                                    gridTemplateColumns: 'repeat(3, 1fr)',\n                                    gap: '1rem',\n                                    marginTop: '2rem',\n                                    marginBottom: '1.5rem'\n                                }}>\n                                    <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                        <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                            {selectedProperty.beds}\n                                        </div>\n                                        <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                            Bedrooms\n                                        </div>\n                                    </div>\n                                    <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                        <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                            {selectedProperty.baths}\n                                        </div>\n                                        <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                            Bathrooms\n                                        </div>\n                                    </div>\n                                    <div className=\"glass\" style={{ padding: '1rem', textAlign: 'center', borderRadius: '12px' }}>\n                                        <div style={{ fontSize: '1.5rem', fontWeight: '700', color: 'var(--color-gold)', marginBottom: '0.5rem' }}>\n                                            {selectedProperty.size}\n                                        </div>\n                                        <div style={{ fontSize: '0.75rem', color: 'var(--color-neutral-500)', textTransform: 'uppercase', letterSpacing: '0.1em' }}>\n                                            Sq Ft\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"modal-actions\">\n                                    <button className=\"cta\">Contact Agent</button>\n                                    <button className=\"btn-outline cta\">Schedule Tour</button>\n                                </div>\n                            </div>\n                        </motion.div>\n                    </div>\n                )}\n            </AnimatePresence>\n        </>\n    );\n};\n\nexport default ElegantFeaturedProperties;\n","import React from 'react';\nimport ElegantFeaturedProperties from './ElegantFeaturedProperties';\n\n// Main Properties wrapper component - now with elegant grid layout like original\nconst Properties = () => {\n    return (\n        <section id=\"portfolio\" className=\"properties-section section-pad\">\n            <ElegantFeaturedProperties />\n        </section>\n    );\n};\n\nexport default Properties;\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","useCombineMotionValues","values","combineValues","updateValue","set","useIsomorphicLayoutEffect","scheduleUpdate","frame","preRender","subscriptions","map","v","forEach","unsubscribe","cancelFrame","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","collectMotionValues","current","undefined","useComputed","transformer","useImmediate","Array","isArray","arguments","length","argOffset","inputValue","inputRange","interpolator","interpolate","transform","useListTransform","_ref","latest","numValues","i","get","PropertyCard","React","property","isActive","scale","opacity","zIndex","x","rotate","onDragEnd","onPropertyClick","yOffset","cardStyle","useMemo","_objectSpread","backgroundImage","concat","image","y","willChange","cardProps","base","className","style","animate","transition","duration","ease","type","drag","dragConstraints","left","right","dragElastic","dragTransition","bounceStiffness","bounceDamping","whileDrag","cursor","_jsxs","motion","div","children","_jsx","position","inset","background","pointerEvents","onClick","e","stopPropagation","top","backdropFilter","border","borderRadius","padding","color","fontSize","fontWeight","letterSpacing","textTransform","onMouseEnter","target","onMouseLeave","display","backgroundColor","textShadow","margin","lineHeight","title","location","price","toLocaleString","beds","baths","size","blurb","displayName","SimpleSwipeProperties","_ref2","onBackToGrid","onFilterChange","filters","filteredProperties","useSelector","selectFilteredProperties","currentIndex","setCurrentIndex","isLoading","setIsLoading","showFilters","setShowFilters","isMobile","setIsMobile","cardOpacity","checkMobile","window","innerWidth","addEventListener","removeEventListener","slice","Math","min","Image","src","timer","setTimeout","clearTimeout","currentProperty","nextProperty","thirdProperty","handleDragEnd","useCallback","event","info","velocity","abs","offset","prev","textAlign","alignItems","justifyContent","marginBottom","gap","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AnimatePresence","exit","flexWrap","toUpperCase","delay","contain","mode","marginTop","ElegantFeaturedProperties","dispatch","useDispatch","selectFilters","selectedProperty","selectSelectedProperty","viewMode","selectViewMode","searchTerm","setSearchTerm","sortBy","setSortBy","setViewMode","handleFilterChange","filterType","setFilter","handleCloseModal","setSelectedProperty","handleViewModeChange","newMode","filter","toLowerCase","includes","sort","a","b","localeCompare","_Fragment","onSearchChange","placeholder","onChange","description","gridTemplateColumns","bedrooms","bathrooms","sqft","Properties","id"],"sourceRoot":""}
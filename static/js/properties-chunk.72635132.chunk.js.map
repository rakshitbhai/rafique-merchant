{"version":3,"file":"static/js/properties-chunk.72635132.chunk.js","mappings":"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","sources":["../node_modules/react-intersection-observer/src/observe.ts","../node_modules/react-intersection-observer/src/InView.tsx","../node_modules/react-intersection-observer/src/useInView.tsx","components/Properties.jsx","components/utils.js"],"sourcesContent":["import type { ObserverInstanceCallback } from \"./index\";\n\nconst observerMap = new Map<\n  string,\n  {\n    id: string;\n    observer: IntersectionObserver;\n    elements: Map<Element, Array<ObserverInstanceCallback>>;\n  }\n>();\n\nconst RootIds: WeakMap<Element | Document, string> = new WeakMap();\nlet rootId = 0;\n\nlet unsupportedValue: boolean | undefined = undefined;\n\n/**\n * What should be the default behavior if the IntersectionObserver is unsupported?\n * Ideally the polyfill has been loaded, you can have the following happen:\n * - `undefined`: Throw an error\n * - `true` or `false`: Set the `inView` value to this regardless of intersection state\n * **/\nexport function defaultFallbackInView(inView: boolean | undefined) {\n  unsupportedValue = inView;\n}\n\n/**\n * Generate a unique ID for the root element\n * @param root\n */\nfunction getRootId(root: IntersectionObserverInit[\"root\"]) {\n  if (!root) return \"0\";\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n\n/**\n * Convert the options to a string Id, based on the values.\n * Ensures we can reuse the same observer when observing elements with the same options.\n * @param options\n */\nexport function optionsToId(options: IntersectionObserverInit) {\n  return Object.keys(options)\n    .sort()\n    .filter(\n      (key) => options[key as keyof IntersectionObserverInit] !== undefined,\n    )\n    .map((key) => {\n      return `${key}_${\n        key === \"root\"\n          ? getRootId(options.root)\n          : options[key as keyof IntersectionObserverInit]\n      }`;\n    })\n    .toString();\n}\n\nfunction createObserver(options: IntersectionObserverInit) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  const id = optionsToId(options);\n  let instance = observerMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    const elements = new Map<Element, Array<ObserverInstanceCallback>>();\n    // biome-ignore lint/style/useConst: It's fine to use let here, as we are going to assign it later\n    let thresholds: number[] | readonly number[];\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        const inView =\n          entry.isIntersecting &&\n          thresholds.some((threshold) => entry.intersectionRatio >= threshold);\n\n        // @ts-ignore support IntersectionObserver v2\n        if (options.trackVisibility && typeof entry.isVisible === \"undefined\") {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        elements.get(entry.target)?.forEach((callback) => {\n          callback(inView, entry);\n        });\n      });\n    }, options);\n\n    // Ensure we have a valid thresholds array. If not, use the threshold from the options\n    thresholds =\n      observer.thresholds ||\n      (Array.isArray(options.threshold)\n        ? options.threshold\n        : [options.threshold || 0]);\n\n    instance = {\n      id,\n      observer,\n      elements,\n    };\n\n    observerMap.set(id, instance);\n  }\n\n  return instance;\n}\n\n/**\n * @param element - DOM Element to observe\n * @param callback - Callback function to trigger when intersection status changes\n * @param options - Intersection Observer options\n * @param fallbackInView - Fallback inView value.\n * @return Function - Cleanup function that should be triggered to unregister the observer\n */\nexport function observe(\n  element: Element,\n  callback: ObserverInstanceCallback,\n  options: IntersectionObserverInit = {},\n  fallbackInView = unsupportedValue,\n) {\n  if (\n    typeof window.IntersectionObserver === \"undefined\" &&\n    fallbackInView !== undefined\n  ) {\n    const bounds = element.getBoundingClientRect();\n    callback(fallbackInView, {\n      isIntersecting: fallbackInView,\n      target: element,\n      intersectionRatio:\n        typeof options.threshold === \"number\" ? options.threshold : 0,\n      time: 0,\n      boundingClientRect: bounds,\n      intersectionRect: bounds,\n      rootBounds: bounds,\n    });\n    return () => {\n      // Nothing to cleanup\n    };\n  }\n  // An observer with the same options can be reused, so lets use this fact\n  const { id, observer, elements } = createObserver(options);\n\n  // Register the callback listener for this element\n  const callbacks = elements.get(element) || [];\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements.delete(element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      observerMap.delete(id);\n    }\n  };\n}\n","import * as React from \"react\";\nimport type { IntersectionObserverProps, PlainChildrenProps } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\nfunction isPlainChildren(\n  props: IntersectionObserverProps | PlainChildrenProps,\n): props is PlainChildrenProps {\n  return typeof props.children !== \"function\";\n}\n\n/**\n ## Render props\n\n To use the `<InView>` component, you pass it a function. It will be called\n whenever the state changes, with the new value of `inView`. In addition to the\n `inView` prop, children also receive a `ref` that should be set on the\n containing DOM element. This is the element that the IntersectionObserver will\n monitor.\n\n If you need it, you can also access the\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\n on `entry`, giving you access to all the details about the current intersection\n state.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView>\n {({ inView, ref, entry }) => (\n      <div ref={ref}>\n        <h2>{`Header inside viewport ${inView}.`}</h2>\n      </div>\n    )}\n </InView>\n );\n\n export default Component;\n ```\n\n ## Plain children\n\n You can pass any element to the `<InView />`, and it will handle creating the\n wrapping DOM element. Add a handler to the `onChange` method, and control the\n state in your own component. Any extra props you add to `<InView>` will be\n passed to the HTML element, allowing you set the `className`, `style`, etc.\n\n ```jsx\n import { InView } from 'react-intersection-observer';\n\n const Component = () => (\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\n </InView>\n );\n\n export default Component;\n ```\n */\nexport class InView extends React.Component<\n  IntersectionObserverProps | PlainChildrenProps,\n  State\n> {\n  node: Element | null = null;\n  _unobserveCb: (() => void) | null = null;\n\n  constructor(props: IntersectionObserverProps | PlainChildrenProps) {\n    super(props);\n    this.state = {\n      inView: !!props.initialInView,\n      entry: undefined,\n    };\n  }\n\n  componentDidMount() {\n    this.unobserve();\n    this.observeNode();\n  }\n\n  componentDidUpdate(prevProps: IntersectionObserverProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (\n      prevProps.rootMargin !== this.props.rootMargin ||\n      prevProps.root !== this.props.root ||\n      prevProps.threshold !== this.props.threshold ||\n      prevProps.skip !== this.props.skip ||\n      prevProps.trackVisibility !== this.props.trackVisibility ||\n      prevProps.delay !== this.props.delay\n    ) {\n      this.unobserve();\n      this.observeNode();\n    }\n  }\n\n  componentWillUnmount() {\n    this.unobserve();\n  }\n\n  observeNode() {\n    if (!this.node || this.props.skip) return;\n    const {\n      threshold,\n      root,\n      rootMargin,\n      trackVisibility,\n      delay,\n      fallbackInView,\n    } = this.props;\n\n    this._unobserveCb = observe(\n      this.node,\n      this.handleChange,\n      {\n        threshold,\n        root,\n        rootMargin,\n        // @ts-ignore\n        trackVisibility,\n        // @ts-ignore\n        delay,\n      },\n      fallbackInView,\n    );\n  }\n\n  unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n      this._unobserveCb = null;\n    }\n  }\n\n  handleNode = (node?: Element | null) => {\n    if (this.node) {\n      // Clear the old observer, before we start observing a new element\n      this.unobserve();\n\n      if (!node && !this.props.triggerOnce && !this.props.skip) {\n        // Reset the state if we get a new node, and we aren't ignoring updates\n        this.setState({ inView: !!this.props.initialInView, entry: undefined });\n      }\n    }\n\n    this.node = node ? node : null;\n    this.observeNode();\n  };\n\n  handleChange = (inView: boolean, entry: IntersectionObserverEntry) => {\n    if (inView && this.props.triggerOnce) {\n      // If `triggerOnce` is true, we should stop observing the element.\n      this.unobserve();\n    }\n    if (!isPlainChildren(this.props)) {\n      // Store the current State, so we can pass it to the children in the next render update\n      // There's no reason to update the state for plain children, since it's not used in the rendering.\n      this.setState({ inView, entry });\n    }\n    if (this.props.onChange) {\n      // If the user is actively listening for onChange, always trigger it\n      this.props.onChange(inView, entry);\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    if (typeof children === \"function\") {\n      const { inView, entry } = this.state;\n      return children({ inView, entry, ref: this.handleNode });\n    }\n\n    const {\n      as,\n      triggerOnce,\n      threshold,\n      root,\n      rootMargin,\n      onChange,\n      skip,\n      trackVisibility,\n      delay,\n      initialInView,\n      fallbackInView,\n      ...props\n    } = this.props as PlainChildrenProps;\n\n    return React.createElement(\n      as || \"div\",\n      { ref: this.handleNode, ...props },\n      children,\n    );\n  }\n}\n","import * as React from \"react\";\nimport type { InViewHookResponse, IntersectionOptions } from \"./index\";\nimport { observe } from \"./observe\";\n\ntype State = {\n  inView: boolean;\n  entry?: IntersectionObserverEntry;\n};\n\n/**\n * React Hooks make it easy to monitor the `inView` state of your components. Call\n * the `useInView` hook with the (optional) [options](#options) you need. It will\n * return an array containing a `ref`, the `inView` status and the current\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\n * report the status.\n *\n * @example\n * ```jsx\n * import React from 'react';\n * import { useInView } from 'react-intersection-observer';\n *\n * const Component = () => {\n *   const { ref, inView, entry } = useInView({\n *       threshold: 0,\n *   });\n *\n *   return (\n *     <div ref={ref}>\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\n *     </div>\n *   );\n * };\n * ```\n */\nexport function useInView({\n  threshold,\n  delay,\n  trackVisibility,\n  rootMargin,\n  root,\n  triggerOnce,\n  skip,\n  initialInView,\n  fallbackInView,\n  onChange,\n}: IntersectionOptions = {}): InViewHookResponse {\n  const [ref, setRef] = React.useState<Element | null>(null);\n  const callback = React.useRef<IntersectionOptions[\"onChange\"]>(onChange);\n  const [state, setState] = React.useState<State>({\n    inView: !!initialInView,\n    entry: undefined,\n  });\n\n  // Store the onChange callback in a `ref`, so we can access the latest instance\n  // inside the `useEffect`, but without triggering a rerender.\n  callback.current = onChange;\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: threshold is not correctly detected as a dependency\n  React.useEffect(\n    () => {\n      // Ensure we have node ref, and that we shouldn't skip observing\n      if (skip || !ref) return;\n\n      let unobserve: (() => void) | undefined;\n      unobserve = observe(\n        ref,\n        (inView, entry) => {\n          setState({\n            inView,\n            entry,\n          });\n          if (callback.current) callback.current(inView, entry);\n\n          if (entry.isIntersecting && triggerOnce && unobserve) {\n            // If it should only trigger once, unobserve the element after it's inView\n            unobserve();\n            unobserve = undefined;\n          }\n        },\n        {\n          root,\n          rootMargin,\n          threshold,\n          // @ts-ignore\n          trackVisibility,\n          // @ts-ignore\n          delay,\n        },\n        fallbackInView,\n      );\n\n      return () => {\n        if (unobserve) {\n          unobserve();\n        }\n      };\n    },\n    // We break the rule here, because we aren't including the actual `threshold` variable\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // If the threshold is an array, convert it to a string, so it won't change between renders.\n      Array.isArray(threshold) ? threshold.toString() : threshold,\n      ref,\n      root,\n      rootMargin,\n      triggerOnce,\n      skip,\n      trackVisibility,\n      fallbackInView,\n      delay,\n    ],\n  );\n\n  const entryTarget = state.entry?.target;\n  const previousEntryTarget = React.useRef<Element | undefined>(undefined);\n  if (\n    !ref &&\n    entryTarget &&\n    !triggerOnce &&\n    !skip &&\n    previousEntryTarget.current !== entryTarget\n  ) {\n    // If we don't have a node ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n    // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n    previousEntryTarget.current = entryTarget;\n    setState({\n      inView: !!initialInView,\n      entry: undefined,\n    });\n  }\n\n  const result = [setRef, state.inView, state.entry] as InViewHookResponse;\n\n  // Support object destructuring, by adding the specific values.\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n\n  return result;\n}\n","import React, { useEffect, useMemo, useRef, useState, memo, lazy, Suspense, useCallback } from 'react';\nimport { motion, AnimatePresence, useReducedMotion } from 'framer-motion';\nimport { variants } from '../hooks/useAdvancedAnimations';\nimport { useInView } from 'react-intersection-observer';\nimport { formatPrice } from './utils';\nimport { imageCache, useOptimizedImage, performanceMonitor } from '../utils/imageCache';\n\nconst mockProperties = [\n    { id: 1, title: 'Skyline Penthouse', location: 'Downtown Core', price: 5400000, type: 'Penthouse', beds: 4, baths: 5, size: 6200, image: 'https://images.unsplash.com/photo-1502005097973-6a7082348e28', blurb: 'Glass-framed panoramic city vistas with private roof deck and spa.' },\n    { id: 2, title: 'Coastal Glass Villa', location: 'Azure Coast', price: 8700000, type: 'Villa', beds: 6, baths: 7, size: 9800, image: 'https://images.unsplash.com/photo-1600585154340-be6161a56a0c', blurb: 'Seamless indoor-outdoor flow, infinity edge pool and ocean horizon.' },\n    { id: 3, title: 'Modern Heritage Estate', location: 'Old Ridge', price: 12500000, type: 'Estate', beds: 8, baths: 9, size: 15200, image: 'https://images.unsplash.com/photo-1512917774080-9991f1c4c750', blurb: 'Restored classical detailing integrated with advanced sustainability systems.' },\n    { id: 4, title: 'Lakeview Retreat', location: 'Emerald Lake', price: 4600000, type: 'Villa', beds: 5, baths: 5, size: 7200, image: 'https://images.unsplash.com/photo-1550966871-3ed3cdb5ed0c', blurb: 'Timber-accented serenity with private dock and cantilevered terrace.' },\n    { id: 5, title: 'Urban Luxe Loft', location: 'Arts District', price: 2100000, type: 'Loft', beds: 2, baths: 2, size: 2800, image: 'https://images.unsplash.com/photo-1554995207-c18c203602cb', blurb: 'Double-height volume, industrial beams, curated gallery illumination.' },\n    { id: 6, title: 'Desert Horizon Residence', location: 'Sunspire Dunes', price: 6900000, type: 'Residence', beds: 5, baths: 6, size: 8400, image: 'https://images.unsplash.com/photo-1479839672679-a46483c0e7c8', blurb: 'Thermal-mass architecture oriented for passive cooling and sunrise framing.' }\n];\n\n// formatPrice imported from utils\n\nconst Properties = () => {\n    const [query, setQuery] = useState('');\n    const [type, setType] = useState('');\n    const [sort, setSort] = useState('');\n    const [selected, setSelected] = useState(null); // modal property id\n    const [showStats, setShowStats] = useState(false);\n    const totalValue = mockProperties.reduce((a, b) => a + b.price, 0);\n    const statsRef = useRef(null);\n    const [viewMode, setViewMode] = useState('grid'); // 'grid' | 'swipe'\n    const { ref: statsRowRef, inView: statsInView } = useInView({ triggerOnce: true, threshold: 0.3 });\n    const { ref: deckRef, inView: deckInView } = useInView({ triggerOnce: false, threshold: 0.2 });\n    const [isNarrow, setIsNarrow] = useState(false);\n\n    // Preload critical images on component mount\n    useEffect(() => {\n        performanceMonitor.markStart('properties-load');\n\n        // Preload first 3 property images for instant display\n        const criticalImages = mockProperties.slice(0, 3).map(p => p.image);\n        const imageUrls = criticalImages.map(img =>\n            imageCache.getImageUrls(img, { quality: 75 }).base\n        );\n\n        imageCache.preloadSequence(imageUrls, 0, 3)\n            .then(() => performanceMonitor.markEnd('properties-load'))\n            .catch(console.warn);\n\n        return () => {\n            // Cleanup performance marks\n            if (typeof performance !== 'undefined') {\n                try {\n                    performance.clearMarks('properties-load-start');\n                    performance.clearMarks('properties-load-end');\n                } catch (e) {\n                    // Ignore cleanup errors\n                }\n            }\n        };\n    }, []);\n\n    // Throttled resize listener to avoid layout thrash\n    useEffect(() => {\n        let frame = null;\n        const check = () => {\n            if (frame) return;\n            frame = requestAnimationFrame(() => {\n                setIsNarrow(window.innerWidth < 640);\n                frame = null;\n            });\n        };\n        check();\n        window.addEventListener('resize', check, { passive: true });\n        return () => {\n            window.removeEventListener('resize', check);\n            if (frame) cancelAnimationFrame(frame);\n        };\n    }, []);\n\n    useEffect(() => {\n        if (isNarrow) setViewMode('swipe');\n        else if (viewMode === 'swipe') setViewMode('grid');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isNarrow]);\n\n    // Optimize filtered list calculation and add memoization\n    const filtered = useMemo(() => {\n        performanceMonitor.markStart('filter-properties');\n\n        let list = mockProperties.filter(p =>\n            (!type || p.type === type) &&\n            (!query || p.title.toLowerCase().includes(query.toLowerCase()) ||\n                p.location.toLowerCase().includes(query.toLowerCase()))\n        );\n\n        if (sort === 'price-asc') list = [...list].sort((a, b) => a.price - b.price);\n        if (sort === 'price-desc') list = [...list].sort((a, b) => b.price - a.price);\n\n        performanceMonitor.markEnd('filter-properties');\n        return list;\n    }, [query, type, sort]);\n\n    // Animate stats when scrolled into view with proper cleanup\n    useEffect(() => {\n        const el = statsRef.current;\n        if (!el) return;\n\n        const io = new IntersectionObserver((entries) => {\n            entries.forEach(e => {\n                if (e.isIntersecting) {\n                    setShowStats(true);\n                    io.disconnect();\n                }\n            });\n        }, { threshold: 0.4, rootMargin: '50px' });\n\n        io.observe(el);\n        return () => io.disconnect();\n    }, []);\n\n    return (\n        <section id=\"portfolio\" className=\"properties-section section-pad\">\n            <div className=\"section-bg-fade\" />\n            <div className=\"container\">\n                <motion.div initial=\"initial\" animate=\"animate\" variants={variants.staggerContainer}>\n                    <motion.h2 className=\"section-heading\" variants={variants.revealLuxury}>Featured Portfolio</motion.h2>\n                    <motion.p className=\"subheading\" style={{ marginBottom: '2.2rem' }} variants={variants.revealLuxury}>\n                        A curated selection of distinguished residences exemplifying craftsmanship, location advantage and asset resilience.\n                    </motion.p>\n                </motion.div>\n                <div className=\"portfolio-top-bar\">\n                    <div className=\"filters-inline\">\n                        {['', 'Penthouse', 'Villa', 'Estate', 'Loft', 'Residence'].map(t => (\n                            <button key={t || 'All'} className={`filter-pill ${t === type ? 'active' : ''}`} onClick={() => setType(t)}>{t || 'All'}</button>\n                        ))}\n                    </div>\n                    <div className=\"filter-bar refined\">\n                        <input placeholder=\"Search title/location\" value={query} onChange={e => setQuery(e.target.value)} />\n                        <select value={sort} onChange={e => setSort(e.target.value)}>\n                            <option value=\"\">Sort</option>\n                            <option value=\"price-asc\">Price ↑</option>\n                            <option value=\"price-desc\">Price ↓</option>\n                        </select>\n                        <button type=\"button\" className=\"filter-pill\" style={{ fontWeight: 600, ...(viewMode === 'swipe' ? { boxShadow: '0 0 0 1px rgba(212,175,55,.4)', borderColor: 'rgba(212,175,55,.6)', color: 'var(--color-neutral-100)', background: 'rgba(212,175,55,0.25)' } : {}) }} onClick={() => setViewMode(v => v === 'grid' ? 'swipe' : 'grid')}>\n                            {viewMode === 'swipe' ? 'Grid Mode' : 'Swipe Mode'}\n                        </button>\n                    </div>\n                </div>\n                {!(viewMode === 'swipe' && isNarrow) && (\n                    <div ref={statsRowRef}>\n                        {statsInView && <StatsRow show={showStats} statsRef={statsRef} total={totalValue} count={mockProperties.length} />}\n                    </div>\n                )}\n                {viewMode === 'grid' && (\n                    <motion.div className=\"grid properties-grid mosaic responsive\" layout initial=\"initial\" animate=\"animate\" variants={variants.staggerContainer}>\n                        {filtered.map((p, i) => (\n                            <PropertyCard key={p.id} property={p} index={i} feature={i === 0} onQuickView={() => setSelected(p)} />\n                        ))}\n                    </motion.div>\n                )}\n                {viewMode === 'swipe' && (\n                    <div ref={deckRef}>\n                        {deckInView && (\n                            <Suspense fallback={<div style={{ height: 520, display: 'grid', placeItems: 'center', fontSize: '.6rem', letterSpacing: '.3em', textTransform: 'uppercase', color: 'var(--color-neutral-500)' }}>Loading deck…</div>}>\n                                <LazySwipeDeck items={filtered} onSelect={setSelected} />\n                            </Suspense>\n                        )}\n                    </div>\n                )}\n            </div>\n            <AnimatePresence>\n                {selected && (\n                    <Suspense fallback={null}>\n                        <LazyPropertyModal property={selected} onClose={() => setSelected(null)} />\n                    </Suspense>\n                )}\n            </AnimatePresence>\n        </section>\n    );\n};\n// Lazy loaded heavy subcomponents\nconst LazyPropertyModal = lazy(() => import(/* webpackChunkName: 'property-modal' */ './chunks/PropertyModal'));\nconst LazySwipeDeck = lazy(() => import(/* webpackChunkName: 'swipe-deck' */ './chunks/SwipeDeck'));\nconst StatNumber = ({ target, prefix = '', duration = 1400 }) => {\n    const [val, setVal] = useState(0);\n    useEffect(() => {\n        let start = null; const from = 0; const to = target;\n        const step = (ts) => { if (!start) start = ts; const p = Math.min(1, (ts - start) / duration); const eased = 1 - Math.pow(1 - p, 3); setVal(Math.round(from + (to - from) * eased)); if (p < 1) requestAnimationFrame(step); };\n        requestAnimationFrame(step);\n    }, [target, duration]);\n    return <span>{prefix}{val.toLocaleString()}</span>;\n};\n\nconst StatsRow = ({ show, statsRef, total, count }) => {\n    const prefersReduced = useReducedMotion();\n    return (\n        <motion.div\n            ref={statsRef}\n            className=\"portfolio-stats\"\n            aria-hidden={!show}\n            variants={variants.cascadeParent}\n            initial=\"initial\"\n            animate={show ? 'animate' : 'initial'}\n        >\n            {[{\n                label: 'Assets Curated', value: show ? <StatNumber target={count} /> : <span>0</span>\n            }, {\n                label: 'Aggregate Value', value: show ? <StatNumber target={total} prefix=\"$\" /> : <span>$0</span>\n            }, {\n                label: 'Global Categories', value: show ? <StatNumber target={5} /> : <span>0</span>\n            }].map(item => (\n                <motion.div key={item.label} className=\"stat-block\" variants={prefersReduced ? undefined : variants.cascadeItem}>\n                    <label>{item.label}</label>\n                    {item.value}\n                </motion.div>\n            ))}\n        </motion.div>\n    );\n};\n\nconst PropertyCard = memo(({ property, index, feature = false, onQuickView }) => {\n    const { id, image, title, price, location, type, beds, baths, size } = property;\n    const [loaded, setLoaded] = useState(false);\n    const [imageError, setImageError] = useState(false);\n    const imgRef = useRef(null);\n\n    // Use optimized image URLs with caching\n    const { urls } = useOptimizedImage(image, {\n        widths: feature ? [480, 720, 900, 1400] : [320, 480, 720, 900],\n        formats: ['avif', 'webp', 'jpg'],\n        quality: feature ? 75 : 70\n    });\n\n    const sizeAttr = feature ? urls.sizes.feature : urls.sizes.card;\n\n    // Preload next images in sequence for smooth scrolling\n    useEffect(() => {\n        if (index < 3) { // Preload first 3 images\n            performanceMonitor.markStart(`preload-${id}`);\n            imageCache.preloadImage(urls.base, 'high')\n                .then(() => performanceMonitor.markEnd(`preload-${id}`))\n                .catch(() => setImageError(true));\n        }\n    }, [urls.base, index, id]);\n\n    const handleImageLoad = useCallback(() => {\n        setLoaded(true);\n        performanceMonitor.markEnd(`image-load-${id}`);\n    }, [id]);\n\n    const handleImageError = useCallback(() => {\n        setImageError(true);\n        setLoaded(true); // Prevent infinite loading state\n    }, []);\n\n    useEffect(() => {\n        performanceMonitor.markStart(`image-load-${id}`);\n    }, [id]);\n\n    return (\n        <motion.article\n            className={`card glass-strong ${feature ? 'feature-card' : ''}`}\n            aria-labelledby={`prop-${id}-title`}\n            variants={variants.propertyCard}\n            layout\n            whileHover=\"hover\"\n            whileTap=\"tap\"\n            style={{ '--card-index': index }}\n        >\n            {!loaded && !imageError && (\n                <div className=\"card-skeleton\">\n                    <div className=\"skel-shimmer\" />\n                </div>\n            )}\n\n            <motion.figure\n                className=\"card-media\"\n                variants={variants.propertyCardMedia}\n                style={{ margin: 0 }}\n            >\n                {!imageError ? (\n                    <picture>\n                        <source\n                            type=\"image/avif\"\n                            srcSet={urls.srcSets.avif}\n                            sizes={sizeAttr}\n                        />\n                        <source\n                            type=\"image/webp\"\n                            srcSet={urls.srcSets.webp}\n                            sizes={sizeAttr}\n                        />\n                        <img\n                            ref={imgRef}\n                            src={urls.base}\n                            srcSet={urls.srcSets.jpg}\n                            sizes={sizeAttr}\n                            alt={title}\n                            loading={index < 2 ? \"eager\" : \"lazy\"}\n                            decoding=\"async\"\n                            fetchPriority={feature ? \"high\" : \"low\"}\n                            onLoad={handleImageLoad}\n                            onError={handleImageError}\n                            style={{\n                                width: '100%',\n                                height: '100%',\n                                objectFit: 'cover',\n                                opacity: loaded ? 1 : 0,\n                                transition: 'opacity 400ms ease',\n                                willChange: loaded ? 'auto' : 'opacity'\n                            }}\n                        />\n                    </picture>\n                ) : (\n                    <div\n                        className=\"image-error-fallback\"\n                        style={{\n                            width: '100%',\n                            height: '100%',\n                            background: 'linear-gradient(135deg, var(--color-neutral-800), var(--color-neutral-700))',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            color: 'var(--color-neutral-400)',\n                            fontSize: '0.8rem'\n                        }}\n                    >\n                        Image unavailable\n                    </div>\n                )}\n\n                {/* Low quality placeholder */}\n                {!loaded && !imageError && (\n                    <div\n                        aria-hidden=\"true\"\n                        style={{\n                            position: 'absolute',\n                            inset: 0,\n                            backgroundImage: `url(${urls.lowQuality})`,\n                            backgroundSize: 'cover',\n                            backgroundPosition: 'center',\n                            filter: 'blur(20px) saturate(140%)',\n                            transition: 'opacity 400ms ease',\n                            opacity: 0.7,\n                            willChange: 'opacity'\n                        }}\n                    />\n                )}\n            </motion.figure>\n\n            <div className=\"card-content\">\n                <span className=\"badge\">{type}</span>\n                <h3\n                    id={`prop-${id}-title`}\n                    style={{\n                        margin: '0.9rem 0 .4rem',\n                        fontSize: feature ? '1.65rem' : '1.25rem',\n                        fontWeight: 500\n                    }}\n                >\n                    {title}\n                </h3>\n                <div className=\"price\">{formatPrice(price)}</div>\n                <div className=\"location\">{location}</div>\n                <div className=\"card-meta-row\">\n                    <span>{beds} BD</span>\n                    <span>{baths} BA</span>\n                    <span>{size.toLocaleString()} SF</span>\n                </div>\n            </div>\n\n            <button\n                type=\"button\"\n                className=\"quick-view-tag\"\n                aria-label={`View details for ${title}`}\n                onClick={onQuickView}\n            >\n                View\n            </button>\n        </motion.article>\n    );\n});\nPropertyCard.displayName = 'PropertyCard';\n\n\nexport default Properties;\n","export const formatPrice = n => '$' + n.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n"],"names":["observerMap","Map","RootIds","WeakMap","rootId","unsupportedValue","optionsToId","options","Object","keys","sort","filter","key","map","concat","root","has","set","toString","get","observe","element","callback","arguments","length","undefined","fallbackInView","window","IntersectionObserver","bounds","getBoundingClientRect","isIntersecting","target","intersectionRatio","threshold","time","boundingClientRect","intersectionRect","rootBounds","id","observer","elements","instance","thresholds","entries","forEach","entry","_a","inView","some","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","push","splice","indexOf","delete","unobserve","size","disconnect","React","useInView","delay","rootMargin","triggerOnce","skip","initialInView","onChange","ref","setRef","React2","state","setState","current","entryTarget","previousEntryTarget","result","mockProperties","title","location","price","type","beds","baths","image","blurb","LazyPropertyModal","lazy","LazySwipeDeck","StatNumber","_ref","prefix","duration","val","setVal","useState","useEffect","start","to","step","ts","p","Math","min","eased","pow","round","requestAnimationFrame","_jsxs","children","toLocaleString","StatsRow","_ref2","show","statsRef","total","count","prefersReduced","useReducedMotion","_jsx","motion","div","className","variants","cascadeParent","initial","animate","label","value","item","cascadeItem","PropertyCard","memo","_ref3","property","index","feature","onQuickView","loaded","setLoaded","imageError","setImageError","imgRef","useRef","urls","useOptimizedImage","widths","formats","quality","sizeAttr","sizes","card","performanceMonitor","markStart","imageCache","preloadImage","base","then","markEnd","catch","handleImageLoad","useCallback","handleImageError","article","propertyCard","layout","whileHover","whileTap","style","figure","propertyCardMedia","margin","width","height","background","display","alignItems","justifyContent","color","fontSize","srcSet","srcSets","avif","webp","src","jpg","alt","loading","decoding","fetchPriority","onLoad","onError","objectFit","opacity","transition","willChange","position","inset","backgroundImage","lowQuality","backgroundSize","backgroundPosition","fontWeight","formatPrice","onClick","displayName","Properties","query","setQuery","setType","setSort","selected","setSelected","showStats","setShowStats","totalValue","reduce","a","b","viewMode","setViewMode","statsRowRef","statsInView","deckRef","deckInView","isNarrow","setIsNarrow","imageUrls","slice","img","getImageUrls","preloadSequence","console","warn","performance","clearMarks","e","frame","check","innerWidth","addEventListener","passive","removeEventListener","cancelAnimationFrame","filtered","useMemo","list","toLowerCase","includes","el","io","staggerContainer","h2","revealLuxury","marginBottom","t","placeholder","_objectSpread","boxShadow","borderColor","v","i","Suspense","fallback","placeItems","letterSpacing","textTransform","items","onSelect","AnimatePresence","onClose","n","replace"],"sourceRoot":""}
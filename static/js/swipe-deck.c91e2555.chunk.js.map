{"version":3,"file":"static/js/swipe-deck.c91e2555.chunk.js","mappings":"gMAsBA,SAASA,EAAeC,GACpB,MAAMC,GAAQC,EAAAA,EAAAA,GAAY,KAAMC,EAAAA,EAAAA,IAAYH,KAMtC,SAAEI,IAAaC,EAAAA,EAAAA,YAAWC,EAAAA,GAChC,GAAIF,EAAU,CACV,MAAO,CAAEG,IAAaC,EAAAA,EAAAA,UAASR,IAC/BS,EAAAA,EAAAA,WAAU,IAAMR,EAAMS,GAAG,SAAUH,GAAY,GACnD,CACA,OAAON,CACX,C,8CC/BA,SAASU,EAAuBC,EAAQC,GAIpC,MAAMZ,EAAQF,EAAec,KAOvBC,EAAcA,IAAMb,EAAMc,IAAIF,KAkBpC,OAbAC,KAKAE,EAAAA,EAAAA,GAA0B,KACtB,MAAMC,EAAiBA,IAAMC,EAAAA,GAAMC,UAAUL,GAAa,GAAO,GAC3DM,EAAgBR,EAAOS,IAAKC,GAAMA,EAAEZ,GAAG,SAAUO,IACvD,MAAO,KACHG,EAAcG,QAASC,GAAgBA,MACvCC,EAAAA,EAAAA,IAAYX,MAGbb,CACX,CC7BA,SAASyB,EAAaC,EAAOC,EAAyBC,EAAaC,GAC/D,GAAqB,oBAAVH,EACP,OCJR,SAAqBI,GAKjBC,EAAAA,GAAoBC,QAAU,GAC9BF,IACA,MAAM9B,EAAQU,EAAuBqB,EAAAA,GAAoBC,QAASF,GAKlE,OADAC,EAAAA,GAAoBC,aAAUC,EACvBjC,CACX,CDTekC,CAAYR,GAEvB,MAAMS,EAAiD,oBAA5BR,EACrBA,EERV,WACI,MAAMS,GAAgBC,MAAMC,QAAOC,UAAAC,QAAA,OAAAP,EAAAM,UAAA,IAC7BE,EAAYL,EAAe,GAAK,EAChCM,EAAkB,EAAID,EAAS,GAAAF,UAAAC,QAAb,EAAIC,OAASR,EAAAM,UAAb,EAAIE,GACtBE,EAAkB,EAAIF,EAAS,GAAAF,UAAAC,QAAb,EAAIC,OAASR,EAAAM,UAAb,EAAIE,GACtBb,EAAmB,EAAIa,EAAS,GAAAF,UAAAC,QAAb,EAAIC,OAASR,EAAAM,UAAb,EAAIE,GACvBZ,EAAe,EAAIY,EAAS,GAAAF,UAAAC,QAAb,EAAIC,OAASR,EAAAM,UAAb,EAAIE,GACnBG,GAAeC,EAAAA,EAAAA,GAAYF,EAAYf,EAAaC,GAC1D,OAAOO,EAAeQ,EAAaF,GAAcE,CACrD,CFAUE,CAAUnB,EAAyBC,EAAaC,GACtD,OAAOQ,MAAMC,QAAQZ,GACfqB,EAAiBrB,EAAOS,GACxBY,EAAiB,CAACrB,GAAQsB,IAAA,IAAEC,GAAOD,EAAA,OAAKb,EAAYc,IAC9D,CACA,SAASF,EAAiBpC,EAAQwB,GAC9B,MAAMc,GAAShD,EAAAA,EAAAA,GAAY,IAAM,IACjC,OAAOS,EAAuBC,EAAQ,KAClCsC,EAAOT,OAAS,EAChB,MAAMU,EAAYvC,EAAO6B,OACzB,IAAK,IAAIW,EAAI,EAAGA,EAAID,EAAWC,IAC3BF,EAAOE,GAAKxC,EAAOwC,GAAGC,MAE1B,OAAOjB,EAAYc,IAE3B,C,oDGrBA,MAkCMI,EAAYC,IAA2E,IAA1E,KAAEC,EAAI,MAAEC,EAAK,WAAEC,EAAU,MAAEC,EAAK,SAAEC,EAAQ,SAAEC,EAAQ,aAAEC,GAAcP,EACrF,MAAMQ,EAAIhE,EAAe,GACnBiE,GAAiBC,EAAAA,EAAAA,KACjBC,EAASxC,EAAaqC,EAAG,EAAE,IAAK,KAAMC,EAAiB,CAAC,EAAG,GAAK,EAAE,GAAI,KACtEG,GAAWC,EAAAA,EAAAA,KACXC,GAAaC,EAAAA,EAAAA,SAAO,GACpBC,GAAgBD,EAAAA,EAAAA,QAAO,IAC7B7D,EAAAA,EAAAA,WAAU,KAAQ4D,EAAWpC,SAAU,EAAa,KAAQoC,EAAWpC,SAAU,IAAa,KAE9FxB,EAAAA,EAAAA,WAAU,KAAQ8D,EAActC,QAAUuC,OAAOC,WAAa,KAAQ,KACtEhE,EAAAA,EAAAA,WAAU,KACH4D,EAAWpC,SAChBkC,EAASO,MAAM,CACbC,MAAO,EAA+B,MAA1BjB,EAAa,EAAID,GAC7BmB,EAA8B,IAA1BlB,EAAa,EAAID,GACrBoB,QAAS,EACTC,WAAY,CAAEC,SAAU,IAAMC,KAAM,CAAC,IAAM,EAAG,GAAK,OAEpD,CAACb,EAAUT,EAAYD,IAE1B,MAuCMwB,EAAIzB,EACV,OACE0B,EAAAA,EAAAA,KAACC,EAAAA,EAAOC,IAAG,CACTC,UAAS,2BAAAC,OAA6B3B,EAAQ,MAAQ,IACtD4B,MAAO,CAAEC,gBAAgB,OAADF,OAASL,EAAEQ,MAAK,qCAAqCC,OAAQ,GAAKjC,EAAOM,IAAGG,SAAQyB,UAAWhC,EAAQ,wEAAqEzB,GACpMlC,QAAS,CAAE2E,MAAO,IAAMC,EAAG,GAAIC,QAAS,GACxCe,OAAMjC,GAAQ,IACdkC,gBAAiB,CAAEC,KAAM,EAAGC,MAAO,GACnCC,YAAa,IACbC,UAhDkBC,CAACC,EAAGC,KACxB,IAAKzC,GAASG,EAAa7B,QAAS,OACpC,MACMoE,EAAWD,EAAKC,SAAStC,EACzBuC,EAASF,EAAKE,OAAOvC,EACrBwC,EAAMD,EAAS,EAAI,GAAK,EAE9B,GADkBE,KAAKC,IAAIH,GAJT,KAIgCE,KAAKC,IAAIJ,GAAY,KAGrE,GADAvC,EAAa7B,SAAU,EACnBoC,EAAWpC,QAAS,CACtB,IAAIyE,GAAS,EACbvC,EAASO,MAAM,CACbX,EAAGwC,EAAMhC,EAActC,QACvB2C,GAAI,IACJV,OAAc,GAANqC,EACR5B,MAAO,KACPG,WAAY,CAAEC,SAAU,IAAMC,KAAM,CAAC,IAAM,EAAG,GAAK,MAClD2B,QAAQ,MACJD,GAAUrC,EAAWpC,UACxB4B,IACAC,EAAa7B,SAAU,KAI3B2E,WAAW,MACJF,GAAUrC,EAAWpC,UACxByE,GAAS,EACT7C,IACAC,EAAa7B,SAAU,IAExB,IACL,OAEIoC,EAAWpC,SACbkC,EAASO,MAAM,CAAEX,EAAG,EAAGa,EAAG,EAAGV,OAAQ,EAAGS,MAAO,EAAGG,WAAY,CAAE+B,KAAM,SAAUC,UAAW,IAAKC,QAAS,OAe3GC,UAAWhD,OAAiB9B,EAAY,CAAEyC,MAAO,KAAMC,GAAI,GAC3DqC,cAAeA,IAAMrD,EAASqB,GAC9BiC,QAAS/C,EACTgD,SAAUA,EAAAA,GAASC,aACnBtC,WAAY,CAAEuC,OAAQ,CAAEtC,SAAU,IAAMC,KAAM,CAAC,IAAM,GAAK,IAAM,KAAOsC,UAEvEC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,qBAAoBiC,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,aAAYiC,SAAA,EACzBpC,EAAAA,EAAAA,KAAA,QAAMG,UAAU,QAAQE,MAAO,CAAEiC,aAAc,SAAUF,SAAErC,EAAE4B,QAC7D3B,EAAAA,EAAAA,KAAA,MAAAoC,SAAKrC,EAAEwC,SACPvC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,MAAKiC,SAAErC,EAAEyC,YACtBxC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,aAAYiC,UAAEK,EAAAA,EAAAA,GAAY1C,EAAE2C,UACzCL,EAAAA,EAAAA,MAAA,OAAKlC,UAAU,YAAWiC,SAAA,CAAErC,EAAE4C,KAAK,cAAO5C,EAAE6C,MAAM,cAAO7C,EAAE8C,KAAKC,iBAAiB,aAEnF9C,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeiC,UAC5BpC,EAAAA,EAAAA,KAAA,UAAQG,UAAU,YAAY4C,QAASA,IAAMrE,EAASqB,GAAGqC,SAAC,oBAOpE,EA7HkBrE,IAA0B,IAAzB,MAAEiF,EAAK,SAAEtE,GAAUX,EACpC,MAAOkF,EAAMC,IAAW5H,EAAAA,EAAAA,UAAS0H,GAC3BpE,GAAeQ,EAAAA,EAAAA,SAAO,IAC5B7D,EAAAA,EAAAA,WAAU,KAAQ2H,EAAQF,GAAQpE,EAAa7B,SAAU,GAAU,CAACiG,IAEpE,MAAMrE,GAAWwE,EAAAA,EAAAA,aAAY,KAC3BD,EAAQE,IACN,IAAKA,EAAE7F,OAAQ,OAAO6F,EACtB,MAAMC,EAAM,IAAID,GACVE,EAAMD,EAAIE,MAChB,OAAKD,GACLD,EAAIG,SAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIH,GAAG,IAAEI,QAASJ,EAAII,QAAU,GAAK,KAC3CL,GAFUD,KAIlB,IAEH,OACEpD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYiC,SACxBa,EAAK9G,IAAI,CAAC4D,EAAG4D,KACZ3D,EAAAA,EAAAA,KAAC5B,EAAS,CAERE,KAAMyB,EACNxB,MAAOoF,EACPnF,WAAYyE,EAAK1F,OACjBkB,MAAOkF,IAAQV,EAAK1F,OAAS,EAC7BmB,SAAUA,EACVC,SAAUA,EACVC,aAAcA,GAAa,GAAAwB,OAPnBL,EAAE6D,GAAE,KAAAxD,OAAIL,EAAE2D,QAAU,O","sources":["../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-combine-values.mjs","../node_modules/framer-motion/dist/es/value/use-transform.mjs","../node_modules/framer-motion/dist/es/value/use-computed.mjs","../node_modules/motion-dom/dist/es/utils/transform.mjs","components/chunks/SwipeDeck.jsx"],"sourcesContent":["import { motionValue } from 'motion-dom';\nimport { useContext, useState, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { cancelFrame, frame } from 'motion-dom';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { transform } from 'motion-dom';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from 'motion-dom';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","import { interpolate } from './interpolate.mjs';\n\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, options);\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { motion, useAnimation, useMotionValue, useTransform, useReducedMotion } from 'framer-motion';\nimport { variants } from '../../hooks/useAdvancedAnimations';\nimport { formatPrice } from '../utils';\n\nconst SwipeDeck = ({ items, onSelect }) => {\n  const [deck, setDeck] = useState(items);\n  const animatingRef = useRef(false);\n  useEffect(() => { setDeck(items); animatingRef.current = false; }, [items]);\n\n  const cycleTop = useCallback(() => {\n    setDeck(d => {\n      if (!d.length) return d;\n      const arr = [...d];\n      const top = arr.pop();\n      if (!top) return d;\n      arr.unshift({ ...top, _cycle: (top._cycle || 0) + 1 });\n      return arr;\n    });\n  }, []);\n\n  return (\n    <div className=\"swipe-deck\">\n      {deck.map((p, idx) => (\n        <SwipeCard\n          key={`${p.id}-${p._cycle || 0}`}\n          card={p}\n          index={idx}\n          deckLength={deck.length}\n          isTop={idx === deck.length - 1}\n          onSelect={onSelect}\n          cycleTop={cycleTop}\n          animatingRef={animatingRef}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst SwipeCard = ({ card, index, deckLength, isTop, onSelect, cycleTop, animatingRef }) => {\n  const x = useMotionValue(0);\n  const prefersReduced = useReducedMotion();\n  const rotate = useTransform(x, [-300, 300], prefersReduced ? [0, 0] : [-18, 18]);\n  const controls = useAnimation();\n  const mountedRef = useRef(false);\n  const offscreenXRef = useRef(0);\n  useEffect(() => { mountedRef.current = true; return () => { mountedRef.current = false; }; }, []);\n  // Cache offscreen travel distance once per mount (avoid repeated layout reads on fast swipes)\n  useEffect(() => { offscreenXRef.current = window.innerWidth + 260; }, []);\n  useEffect(() => {\n    if (!mountedRef.current) return;\n    controls.start({\n      scale: 1 - (deckLength - 1 - index) * 0.028,\n      y: (deckLength - 1 - index) * 16,\n      opacity: 1,\n      transition: { duration: 0.55, ease: [0.16, 1, 0.3, 1] }\n    });\n  }, [controls, deckLength, index]);\n\n  const handleDragEnd = (_, info) => {\n    if (!isTop || animatingRef.current) return;\n    const threshold = 120;\n    const velocity = info.velocity.x;\n    const offset = info.offset.x;\n    const dir = offset > 0 ? 1 : -1;\n    const shouldFly = Math.abs(offset) > threshold || Math.abs(velocity) > 650;\n    if (shouldFly) {\n      animatingRef.current = true;\n      if (mountedRef.current) {\n        let cycled = false;\n        controls.start({\n          x: dir * offscreenXRef.current,\n          y: -120,\n          rotate: dir * 24,\n          scale: 1.04,\n          transition: { duration: 0.42, ease: [0.16, 1, 0.3, 1] }\n        }).finally(() => {\n          if (!cycled && mountedRef.current) {\n            cycleTop();\n            animatingRef.current = false;\n          }\n        });\n        // Early cycle for responsiveness (let next card appear while old continues visually off-screen)\n        setTimeout(() => {\n          if (!cycled && mountedRef.current) {\n            cycled = true;\n            cycleTop();\n            animatingRef.current = false;\n          }\n        }, 260);\n      }\n    } else {\n      if (mountedRef.current) {\n        controls.start({ x: 0, y: 0, rotate: 0, scale: 1, transition: { type: 'spring', stiffness: 420, damping: 28 } });\n      }\n    }\n  };\n\n  const p = card;\n  return (\n    <motion.div\n      className={`swipe-card glass-strong ${isTop ? 'top' : ''}`}\n      style={{ backgroundImage: `url(${p.image}?w=900&auto=format&fit=crop&q=60)`, zIndex: 10 + index, x, rotate, boxShadow: isTop ? '0 18px 40px -18px rgba(0,0,0,.65),0 4px 14px -6px rgba(0,0,0,.5)' : undefined }}\n      initial={{ scale: 0.94, y: 40, opacity: 0 }}\n      drag={isTop ? 'x' : false}\n      dragConstraints={{ left: 0, right: 0 }}\n      dragElastic={0.22}\n      onDragEnd={handleDragEnd}\n      whileDrag={prefersReduced ? undefined : { scale: 1.04, y: -4 }}\n      onDoubleClick={() => onSelect(p)}\n      animate={controls}\n      variants={variants.propertyCard}\n      transition={{ layout: { duration: 0.45, ease: [0.25, 0.1, 0.25, 1] } }}\n    >\n      <div className=\"swipe-card-overlay\">\n        <div className=\"swipe-meta\">\n          <span className=\"badge\" style={{ marginBottom: '.6rem' }}>{p.type}</span>\n          <h3>{p.title}</h3>\n          <p className=\"loc\">{p.location}</p>\n          <p className=\"price-line\">{formatPrice(p.price)}</p>\n          <div className=\"mini-meta\">{p.beds} BD • {p.baths} BA • {p.size.toLocaleString()} SF</div>\n        </div>\n        <div className=\"swipe-actions\">\n          <button className=\"cta small\" onClick={() => onSelect(p)}>Details</button>\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default SwipeDeck;\n"],"names":["useMotionValue","initial","value","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","useCombineMotionValues","values","combineValues","updateValue","set","useIsomorphicLayoutEffect","scheduleUpdate","frame","preRender","subscriptions","map","v","forEach","unsubscribe","cancelFrame","useTransform","input","inputRangeOrTransformer","outputRange","options","compute","collectMotionValues","current","undefined","useComputed","transformer","useImmediate","Array","isArray","arguments","length","argOffset","inputValue","inputRange","interpolator","interpolate","transform","useListTransform","_ref","latest","numValues","i","get","SwipeCard","_ref2","card","index","deckLength","isTop","onSelect","cycleTop","animatingRef","x","prefersReduced","useReducedMotion","rotate","controls","useAnimation","mountedRef","useRef","offscreenXRef","window","innerWidth","start","scale","y","opacity","transition","duration","ease","p","_jsx","motion","div","className","concat","style","backgroundImage","image","zIndex","boxShadow","drag","dragConstraints","left","right","dragElastic","onDragEnd","handleDragEnd","_","info","velocity","offset","dir","Math","abs","cycled","finally","setTimeout","type","stiffness","damping","whileDrag","onDoubleClick","animate","variants","propertyCard","layout","children","_jsxs","marginBottom","title","location","formatPrice","price","beds","baths","size","toLocaleString","onClick","items","deck","setDeck","useCallback","d","arr","top","pop","unshift","_objectSpread","_cycle","idx","id"],"sourceRoot":""}